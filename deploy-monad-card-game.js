import { ethers } from 'ethers';
import dotenv from 'dotenv';
import fs from 'fs';

dotenv.config();

// MonadCardGame合约字节码和ABI
const CONTRACT_BYTECODE = "0x608060405234801561000f575f5ffd5b50335f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611bd1806100595f395ff3fe608060405260043610610108575f3560e01c8063a5393bd111610094578063d81e2c0e11610063578063d81e2c0e14610348578063dd62ed3e14610384578063f3d0e9e2146103c0578063f6d361cc146103e8578063fa5c13141461041257610108565b8063a5393bd114610280578063a9059cbb146102aa578063c59b6c18146102e6578063c81e5ca91461031057610108565b80636ba4c138116100db5780636ba4c138146101a45780638da5cb5b146101c05780638f32d59b146101ea57806394b0050d1461021457806395d89b411461023057610108565b806306fdde031461010c578063095ea7b31461013657806318160ddd1461017257806370a082311461019c575b5f5ffd5b348015610117575f5ffd5b50610120610450565b60405161012d9190611414565b60405180910390f35b348015610141575f5ffd5b5061015c600480360381019061015791906114c5565b61048c565b604051610169919061151d565b60405180910390f35b34801561017d575f5ffd5b506101866104a2565b6040516101939190611545565b60405180910390f35b3480156101a7575f5ffd5b506101c260048036038101906101bd919061155e565b6104a8565b6040516101cf9190611545565b60405180910390f35b3480156101cb575f5ffd5b506101d46104bd565b6040516101e19190611598565b60405180910390f35b3480156101f5575f5ffd5b506101fe6104e0565b60405161020b919061151d565b60405180910390f35b61022e600480360381019061022991906116e4565b610538565b005b34801561023b575f5ffd5b506102446107ac565b60405161025191906114c5565b60405180910390f35b34801561026b575f5ffd5b5061027e6004803603810190610279919061155e565b6107e8565b005b34801561028b575f5ffd5b50610294610949565b6040516102a19190611545565b60405180910390f35b3480156102b5575f5ffd5b506102d060048036038101906102cb91906114c5565b610953565b6040516102dd919061151d565b60405180910390f35b3480156102f1575f5ffd5b506102fa610969565b6040516103079190611545565b60405180910390f35b34801561031b575f5ffd5b506103366004803603810190610331919061155e565b610973565b60405161034593929190611798565b60405180910390f35b348015610353575f5ffd5b5061036e6004803603810190610369919061155e565b610ae8565b60405161037b919061151d565b60405180910390f35b34801561038f575f5ffd5b506103aa60048036038101906103a591906117cb565b610b3f565b6040516103b79190611545565b60405180910390f35b3480156103cb575f5ffd5b506103e660048036038101906103e1919061155e565b610b5f565b005b3480156103f3575f5ffd5b506103fc610d97565b6040516104099190611545565b60405180910390f35b34801561041d575f5ffd5b506104386004803603810190610433919061155e565b610d9f565b60405161044793929190611845565b60405180910390f35b60405180604001604052806010815260200160cff09f8f86204d6f6e616420436172647360801b81525081565b5f610498338484610f13565b6001905092915050565b60025481565b6003602052805f5260405f205f915090505481565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60058151146105825760405162461bcd60e51b8152602060048201526016602482015260d760211b75084ead8e8e4c6e640e6eac2e8d2e6d840d640c6c2e8d604482015260640160405180910390fd5b660aa87bee53800034101561059b5761059a346110d0565b5b6105a433610ae8565b6105b2576105b1346110d0565b5b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015403610659576007339080600181540180825580915050600190039060205260209004015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60405180608001604052808281526020014281526020015f81526020016001151581525060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f0190816106cd919061196f565b5060208201518160010155604082015181600201556060820151816003015f6101000a81548160ff02191690831515021790555090505034600860016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905503373ffffffffffffffffffffffffffffffffffffffff167f3d3e7f6bea8b87e6e2b0f3e8e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3834260405161079993929190611a39565b60405180910390a25050565b60405180604001604052806004815260200160e3808d60e01b81525081565b6107f06104e0565b61082f5760405162461bcd60e51b815260040160405180910390602060048201819052602482015260d760211b751bdb9b1e08dbdb9d1c9bdb1b195c88185b1b1bddd959604482015260640160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361089d5760405162461bcd60e51b815260040160405180910390602060048201526016602482015260d760211b7516995d9bdb9b1e54185919195c881a5b9d985b1a5960448201526064015b60405180910390fd5b805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc6861638160405161090c9190611598565b60405180910390a16040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109409190611a69565b60405180910390fd5b5f600254905090565b5f61095f338484611186565b6001905092915050565b5f600754905090565b606060015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0180548060200260200160405190810160405280929190818152602001828054801560265760200282019190525f5260205f20905b8154815260200190600101908083116109ed5750505050509050805f60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015460015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003015f9054906101000a900460ff16925092509250925092565b5f5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010154118061133890505b919050565b6004602052815f5260405f20602052805f5260405f205f91509150505481565b610b676104e0565b610ba65760405162461bcd60e51b815260040160405180910390602060048201819052602482015260d760211b751bdb9b1e08dbdb9d1c9bdb1b195c88185b1b1bddd959604482015260640160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c145760405162461bcd60e51b815260040160405180910390602060048201526016602482015260d760211b7516995d9bdb9b1e54185919195c881a5b9d985b1a5960448201526064016109405b5f8173ffffffffffffffffffffffffffffffffffffffff164760405160006040518083038185875af1925050503d805f8114610c6c5760405191601f19603f3d011682016040523d82523d5f602084013e610c71565b606091505b5050905080610cb55760405162461bcd60e51b815260040160405180910390602060048201526017602482015260d760211b7608cc2d2d8cac840e8de40e6cadcc840cce4de40cae8d60448201526064016109405b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c9f6e5f5e5f5e5f5e5f5e5f5e5f5e5f5e5f5e5f5e5f5e5f5e5f5e5f5e5f5e5f4760405160405180910390a36040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6c906a48756e7465724b696e676360a81b815260a01b60200182015250565b60405180910390fd5b600254610deb5760405162461bcd60e51b815260206004820152601c60248201527f4d6f6e616420436172642047616d653a204e6f20706c6179657273000000000060448201526064016109405b60405180910390fd5b565b660aa87bee53800081565b5f815f0190508060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015460015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003015f9054906101000a900460ff169250925092509193909250565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f815760405162461bcd60e51b815260040160405180910390602060048201526024602482015260d760211b7f43727970746f2047616d653a20617070726f76652066726f6d207a65726f604482015260640160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fef5760405162461bcd60e51b815260040160405180910390602060048201526022602482015260d760211b7f43727970746f2047616d653a20617070726f766520746f207a65726f604482015260640160405180910390fd5b806004602052835f5260405f20602052825f5260405f20555081602052835f5273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161106c9190611545565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110e75760405162461bcd60e51b815260040160405180910390602060048201526024602482015260d760211b7f43727970746f2047616d653a207472616e7366657220746f207a65726f604482015260640160405180910390fd5b8060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461113391906115e5565b925050819055508060025f82825461114b91906115e5565b925050819055505f602052815f5273ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161129c9190611545565b60405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113165760405162461bcd60e51b815260040160405180910390602060048201526026602482015260d760211b7f43727970746f2047616d653a207472616e736665722066726f6d207a65726f604482015260640160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113845760405162461bcd60e51b815260040160405180910390602060048201526024602482015260d760211b7f43727970746f2047616d653a207472616e7366657220746f207a65726f604482015260640160405180910390fd5b8060035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461111e91906115e5565b8060025f8282546111eb91906115e5565b505050565b5f82825260208201905092915050565b828183375f83830152505050565b5f601f19601f8301169050919050565b5f6114238385611a82565b93506114308385846113f9565b61143983611408565b840190509392505050565b5f602082019050818103600083015261145e818486611418565b90509392505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114948261146b565b9050919050565b6114a48161148a565b81146114ae575f5ffd5b50565b5f813590506114bf8161149b565b92915050565b5f5f604083850312156114db576114da611467565b5b5f6114e8858286016114b1565b92505060206114f985828601611467565b9150509250929050565b5f8115159050919050565b61151781611503565b82525050565b5f602082019050611530818401846115f5565b92915050565b5f819050919050565b61154881611536565b82525050565b5f602082019050611561818401846115b9565b92915050565b5f6020828403121561157c5761157b611467565b5b5f611589848285016114b1565b91505092915050565b5f6020820190506115a5818401846114ff565b92915050565b5f5f5f606084860312156115c2576115c1611467565b5b5f6115cf868287016114b1565b93505060206115e0868287016114b1565b92505060406115f186828701611467565b9150509250925092565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f67ffffffffffffffff82111561166b5761166a611604565b5b611674826113fe565b9050602081019050919050565b828183375f83830152505050565b5f6116a161169c84611650565b611631565b9050828152602081018484840111156116bd576116bc61164b565b5b6116c8848285611681565b509392505050565b5f82601f8301126116e4576116e3611647565b5b81356116f484826020860161168f565b91505092915050565b5f6020828403121561171257611711611467565b5b5f82013567ffffffffffffffff81111561172f5761172e61146c565b5b61173b848285016116d0565b91505092915050565b5f81519050919050565b8281835e5f83830152505050565b5f61176782611744565b611771818561174e565b9350611781818560208601611681565b61178a816113fe565b840191505092915050565b5f6020820190508181035f8301526117ad818461175d565b905092915050565b6117be81611536565b82525050565b6117cd81611503565b82525050565b5f5f604083850312156117e9576117e8611467565b5b5f6117f6858286016114b1565b9250506020611807858286016114b1565b9150509250929050565b5f6020820190506118246001830184611589565b92915050565b61183361148a565b82525050565b5f60408201905061184c60018301866117a5565b611859602083018561182a565b61186660408301846117c4565b949350505050565b5f67ffffffffffffffff82111561188857611887611604565b5b611891826113fe565b9050602081019050919050565b5f6118b06118ab8461186e565b611631565b9050828152602081018484840111156118cc576118cb61164b565b5b6118d7848285611681565b509392505050565b5f82601f8301126118f3576118f2611647565b5b813561190384826020860161189e565b91505092915050565b5f6020828403121561192157611920611467565b5b5f82013567ffffffffffffffff81111561193e5761193d61146c565b5b61194a848285016118df565b91505092915050565b5f81905092915050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f819050919050565b5f61199082611744565b61199a8185611953565b93506119aa818560208601611681565b6119b3816113fe565b840191505092915050565b5f6119c98383611986565b905092915050565b5f602082019050919050565b5f6119e78261197d565b6119f1818561195d565b9350836020820285016119a385611968565b805f5b85811015611a385784840389528151611a1f85826119be565b9450611a2a836119d1565b925060208a019950506001810190506119a6565b50829750879550505050505092915050565b5f606082019050611a5d5f8301866119dd565b611a6a60208301856117b5565b611a7760408301846117b5565b949350505050565b828183375f83830152505050565b5f602082019050818103600083015261145e8184611a7f565b611ab081611536565b8114611aba575f5ffd5b50565b5f81359050611acb81611aa7565b92915050565b5f5f60408385031215611ae757611ae6611467565b5b5f611af4858286016114b1565b9250506020611b0585828601611abd565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611b4682611536565b9150611b5183611536565b9250828201905080821115611b6957611b68611b0f565b5b92915050565b5f611b7982611536565b9150611b8483611536565b9250828203905081811115611b9c57611b9b611b0f565b5b9291505056fea2646970667358221220ad9f31e89c5b8b5a8f8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e64736f6c634300081c0033";

const CONTRACT_ABI = [
  {
    "inputs": [
      {
        "internalType": "string[]",
        "name": "cardSymbols",
        "type": "string[]"
      }
    ],
    "name": "submitHand",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "player",
        "type": "address"
      }
    ],
    "name": "getPlayerHand",
    "outputs": [
      {
        "internalType": "string[]",
        "name": "cardSymbols",
        "type": "string[]"
      },
      {
        "internalType": "uint256",
        "name": "submissionTime",
        "type": "uint256"
      },
      {
        "internalType": "bool",
        "name": "isLocked",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "ENTRY_FEE",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "LOCK_DURATION",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
];

async function deployContract() {
  console.log('🚀 准备部署MonadCardGame合约到Monad测试网...\n');
  
  if (!process.env.PRIVATE_KEY) {
    console.error('❌ 错误: 请在.env文件中设置PRIVATE_KEY');
    console.log('   示例: PRIVATE_KEY=your_private_key_here');
    return;
  }
  
  try {
    // 1. 连接到Monad测试网
    const provider = new ethers.JsonRpcProvider('https://testnet-rpc.monad.xyz');
    console.log('✅ 已连接到Monad测试网');
    
    // 2. 创建钱包
    const wallet = new ethers.Wallet(process.env.PRIVATE_KEY, provider);
    console.log('👛 部署钱包地址:', wallet.address);
    
    // 3. 检查余额
    const balance = await provider.getBalance(wallet.address);
    console.log('💰 钱包余额:', ethers.formatEther(balance), 'MONAD');
    
    if (balance < ethers.parseEther('0.1')) {
      console.error('❌ 余额不足！需要至少0.1 MONAD来部署合约');
      return;
    }
    
    // 4. 部署合约
    console.log('\n📝 部署合约中...');
    const factory = new ethers.ContractFactory(CONTRACT_ABI, CONTRACT_BYTECODE, wallet);
    const contract = await factory.deploy();
    
    console.log('⏳ 等待交易确认...');
    await contract.waitForDeployment();
    
    const contractAddress = await contract.getAddress();
    console.log('\n✅ 合约部署成功！');
    console.log('📍 合约地址:', contractAddress);
    
    // 5. 验证合约
    console.log('\n🔍 验证合约...');
    const deployedContract = new ethers.Contract(contractAddress, CONTRACT_ABI, wallet);
    
    const entryFee = await deployedContract.ENTRY_FEE();
    const lockDuration = await deployedContract.LOCK_DURATION();
    
    console.log('  - ENTRY_FEE:', ethers.formatEther(entryFee), 'ETH');
    console.log('  - LOCK_DURATION:', lockDuration.toString(), '秒');
    
    // 6. 保存部署信息
    const deploymentInfo = {
      contractAddress: contractAddress,
      deployer: wallet.address,
      network: 'Monad Testnet',
      chainId: 10143,
      timestamp: new Date().toISOString(),
      entryFee: ethers.formatEther(entryFee) + ' ETH',
      lockDuration: lockDuration.toString() + ' seconds'
    };
    
    fs.writeFileSync('deployment-info.json', JSON.stringify(deploymentInfo, null, 2));
    console.log('\n📄 部署信息已保存到 deployment-info.json');
    
    // 7. 更新前端配置
    console.log('\n📱 请更新前端代码中的合约地址:');
    console.log(`
// 在 src/UltimateMonadApp.jsx 中更新:
const MONAD_CARD_GAME_CONTRACT = {
  address: '${contractAddress}',
  abi: [...] // 保持现有ABI不变
};
`);
    
    console.log('\n🎉 部署完成！');
    
  } catch (error) {
    console.error('\n❌ 部署失败:', error.message);
  }
}

deployContract();