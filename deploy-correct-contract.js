import { ethers } from 'ethers';
import fs from 'fs';

const PRIVATE_KEY = '26a1996f7a34602aa1f487dacb7c32205afc429558931156245a785fdc55dd24';
const RPC_URL = 'https://testnet-rpc.monad.xyz';

// 正确的MonadCardGame合约字节码（从Remix编译）
const CONTRACT_BYTECODE = '0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e9f806100606000396000f3fe6080604052600436106100865760003560e01c80638da5cb5b116100595780638da5cb5b146101505780639d76ea581461017b57806394b0050d146101a6578063c59b6c18146101c2578063d3121b8f146101ed5761008d565b806306fdde031461009257806327e235e3146100bd57806370a08231146100fa578063883164561461011e5761008d565b3661008d57005b600080fd5b34801561009e57600080fd5b506100a7610234565b6040516100b49190610a58565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df9190610abc565b610270565b6040516100f19190610af8565b60405180910390f35b610102610288565b6040516101159796959493929190610b22565b60405180910390f35b34801561012a57600080fd5b506101336102be565b604051610147989796959493929190610bab565b60405180910390f35b34801561015c57600080fd5b50610165610302565b6040516101729190610c40565b60405180910390f35b34801561018757600080fd5b50610190610326565b60405161019d9190610c40565b60405180910390f35b6101c060048036038101906101bb9190610da5565b61034a565b005b3480156101ce57600080fd5b506101d7610523565b6040516101e49190610af8565b60405180910390f35b3480156101f957600080fd5b50610214600480360381019061020f9190610abc565b61052f565b60405161022b9b9a99989796959493929190610e1a565b60405180910390f35b60405180604001604052806010815260200160cf4d6f6e616420436172642047616d6560801b81525081565b60026020528060005260406000206000915090505481565b60008060008060008060008096509650965096509650965096509193959799909294565b600080600080600080600080600099509950995099509950995099509950995091939597999092949698565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6005815114610394576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038b90610ef3565b60405180910390fd5b662386f26fc100003410156103de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d590610f5f565b60405180910390fd5b6000805b82518110156104b75760008382815181106103ff576103fe610f7f565b5b60200260200101519050600084111561047e57604051806040016040528060018152602001602c60f81b8152508160405160200161043f9291906110ea565b60405160208183030381529060405292507f2c00000000000000000000000000000000000000000000000000000000000000826040516020016104839190611128565b6040516020818303038152906040529250505b816040516020016104999190611166565b604051602081830303815290604052925080806001019150506103e2565b5060405180606001604052808281526020014281526020016001151581525060036000336001600160a01b03166001600160a01b031681526020019081526020016000206000820151816000019080519060200190610517929190610688565b50604082015181600101559050602082015181600201556040820151816003015f6101000a81548160ff021916908315150217905550905050346002600033600160a01b0316600160a01b031681526020019081526020016000206000828254610583919061117d565b925050819055507fc1e13b2e0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b3334426040516105bd939291906111b1565b60405180910390a15050565b662386f26fc1000081565b60036020528060005260406000206000915090508060000180546105f990611021565b80601f016020809104026020016040519081016040528092919081815260200182805461062590611021565b80156106725780601f1061064757610100808354040283529160200191610672565b820191906000526020600020905b81548152906001019060200180831161065557829003601f168201915b5050505050908060010154908060020154908060030160009054906101000a900460ff16905084565b8280546106a890611021565b90600052602060002090601f0160209004810192826106ca5760008555610711565b82601f106106e357805160ff1916838001178555610711565b82800160010185558215610711579182015b828111156107105782518255916020019190600101906106f5565b5b50905061071e9190610722565b5090565b5b8082111561073b576000816000905550600101610723565b5090565b600081519050919050565b600082825260208201905092915050565b60005b8381101561077a57808201518184015260208101905061075f565b83811115610789576000848401525b50505050565b6000601f19601f8301169050919050565b60006107ab8261073f565b6107b5818561074a565b93506107c581856020860161075b565b6107ce8161078f565b840191505092915050565b600060208201905081810360008301526107f381846107a0565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061083a8261080f565b9050919050565b61084a8161082f565b811461085557600080fd5b50565b60008135905061086781610841565b92915050565b60006020828403121561088357610882610805565b5b600061089184828501610858565b91505092915050565b6000819050919050565b6108ad8161089a565b82525050565b60006020820190506108c860008301846108a4565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156109085780820151818401526020810190506108ed565b83811115610917576000848401525b50505050565b6000610928826108ce565b61093281856108d9565b93506109428185602086016108ea565b61094b8161078f565b840191505092915050565b61095f8161089a565b82525050565b60008115159050919050565b61097a81610965565b82525050565b6000610100820190508181036000830152610999818b61091d565b90506109a8602083018a610956565b6109b56040830189610971565b6109c26060830188610956565b6109cf6080830187610956565b6109dc60a0830186610956565b6109e960c0830185610956565b6109f660e0830184610956565b9998505050505050505050565b610a0c8161082f565b82525050565b6000610100820190508181036000830152610a2c8161091d565b9050610a3b6020830187610956565b610a486040830186610971565b610a556060830185610956565b610a626080830184610956565b610a6f60a0830183610956565b610a7c60c0830182610956565b610a8960e0830181610956565b610a976101008301806108a4565b95945050505050565b6000602082019050610ab56000830184610a03565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610ae057610adf610ac0565b5b8235905067ffffffffffffffff811115610afd57610afc610ac5565b5b602083019150836020820283011115610b1957610b18610aca565b5b9250929050565b60008083601f840112610b3657610b35610ac0565b5b8235905067ffffffffffffffff811115610b5357610b52610ac5565b5b602083019150836001820283011115610b6f57610b6e610aca565b5b9250929050565b600060208284031215610b8c57610b8b610805565b5b600082013567ffffffffffffffff811115610baa57610ba961080a565b5b610bb684828501610b26565b91505092915050565b610bc88161089a565b82525050565b610bd781610965565b82525050565b600061012082019050610bf3600083018c610bbf565b610c00602083018b610bbf565b610c0d604083018a610bbf565b610c1a6060830189610bbf565b610c276080830188610bbf565b610c3460a0830187610bbf565b610c4160c0830186610bbf565b610c4e60e0830185610bbf565b610c5c6101008301846108a4565b9a9950505050505050505050565b60006020820190508181036000830152610c8481846107a0565b905092915050565b600082825260208201905092915050565b6000610ca8826108ce565b610cb28185610c8c565b9350610cc28185602086016108ea565b610ccb8161078f565b840191505092915050565b60006060820190508181036000830152610cf08186610c9e565b9050610cff6020830185610956565b610d0c6040830184610971565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d5b57607f821691505b60208210811415610d6f57610d6e610d14565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000610db08261089a565b915082821015610dc357610dc2610e92565b5b828203905092915050565b7f4d7573742073656c6563742065786163746c7920352063617264730000000000600082015250565b6000610e04601b8361074a565b9150610e0f82610dce565b602082019050919050565b7f496e73756666696369656e7420656e7472792066656500000000000000000000600082015250565b6000610e5060168361074a565b9150610e5b82610e1a565b602082019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008190508160005260206000209050919050565b60008154610eb681611021565b610ec08186610fae565b94506001821660008114610edb5760018114610eec57610f1f565b60ff19831686528186019350610f1f565b610ef585610e92565b60005b83811015610f1757815481890152600182019150602081019050610ef8565b838801955050505b50505092915050565b6000610f3482856108ce565b9150610f408284610c9e565b91508190509392505050565b6000610f588285610c9e565b9150610f648284610c9e565b91508190509392505050565b600081905092915050565b6000819050816000526020600020905092915050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610fde7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610fa1565b610fe88683610fa1565b95508019841693508086168417925050509392505050565b6000819050919050565b600061101f61101a8361089a565b611000565b9050919050565b6000819050919050565b61103a8361100a565b61104e61104682611026565b848454610fae565b825550505050565b600090565b611063611056565b61106e818484611030565b505050565b5b81811015611092576110876000826110f3565b600181019050611074565b5050565b601f8211156110d7576110a881610f7b565b6110b184610f90565b810160208510156110c0578190505b6110d46110cc85610f90565b830182611073565b50505b505050565b6110e682610fae565b810181811067ffffffffffffffff8211171561110557611104610d75565b5b80604052505050565b600061111a8285610ead565b91508190509392505050565b7f2c00000000000000000000000000000000000000000000000000000000000000600082015250565b600061115c600183610f70565b915061116782611126565b600182019050919050565b600061117e828461114f565b915081905092915050565b60006111948261089a565b915061119f8361089a565b9250828201905080821115611220576112206112a0565b5b92915050565b60006060820190506111a26000830186610a03565b6111af60208301856108a4565b6111bc60408301846108a4565b94935050505056fea2646970667358221220b8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e864736f6c634300080c0033';

// 正确的ABI
const CONTRACT_ABI = [
  {
    "inputs": [
      {
        "internalType": "string[]",
        "name": "cardSymbols",
        "type": "string[]"
      }
    ],
    "name": "submitHand",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "ENTRY_FEE",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "player",
        "type": "address"
      }
    ],
    "name": "getPlayerHand",
    "outputs": [
      {
        "internalType": "string",
        "name": "cards",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "submissionTime",
        "type": "uint256"
      },
      {
        "internalType": "bool",
        "name": "isLocked",
        "type": "bool"
      },
      {
        "internalType": "uint256",
        "name": "balance",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "unlockTime",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "currentTime",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
];

async function deployCorrectContract() {
  console.log('🚀 部署正确的MonadCardGame合约...\n');
  
  try {
    const provider = new ethers.JsonRpcProvider(RPC_URL);
    const wallet = new ethers.Wallet(PRIVATE_KEY, provider);
    
    console.log('👛 钱包地址:', wallet.address);
    const balance = await provider.getBalance(wallet.address);
    console.log('💰 余额:', ethers.formatEther(balance), 'MONAD\n');
    
    // 部署合约
    console.log('📝 部署合约中...');
    const factory = new ethers.ContractFactory(CONTRACT_ABI, CONTRACT_BYTECODE, wallet);
    const contract = await factory.deploy();
    
    console.log('⏳ 等待交易确认...');
    console.log('📍 交易哈希:', contract.deploymentTransaction().hash);
    
    await contract.waitForDeployment();
    
    const contractAddress = await contract.getAddress();
    console.log('\n✅ 合约部署成功！');
    console.log('📍 合约地址:', contractAddress);
    
    // 验证合约
    console.log('\n🔍 验证合约...');
    const deployedContract = new ethers.Contract(contractAddress, CONTRACT_ABI, provider);
    
    try {
      const entryFee = await deployedContract.ENTRY_FEE();
      console.log('✅ ENTRY_FEE:', ethers.formatEther(entryFee), 'ETH');
    } catch (error) {
      console.log('❌ ENTRY_FEE读取失败:', error.message);
    }
    
    try {
      const owner = await deployedContract.owner();
      console.log('✅ Owner:', owner);
    } catch (error) {
      console.log('❌ Owner读取失败:', error.message);
    }
    
    // 保存部署信息
    const deploymentInfo = {
      contractAddress: contractAddress,
      deployer: wallet.address,
      network: 'Monad Testnet',
      chainId: 10143,
      timestamp: new Date().toISOString(),
      transactionHash: contract.deploymentTransaction().hash
    };
    
    fs.writeFileSync('new-deployment-info.json', JSON.stringify(deploymentInfo, null, 2));
    console.log('\n📄 部署信息已保存到 new-deployment-info.json');
    
    console.log('\n📱 请更新前端配置:');
    console.log(`  合约地址: ${contractAddress}`);
    
    // 清理私钥
    const PRIVATE_KEY = null;
    
  } catch (error) {
    console.error('\n❌ 部署失败:', error.message);
  }
}

deployCorrectContract();