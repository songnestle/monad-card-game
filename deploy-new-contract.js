import { ethers } from 'ethers';
import dotenv from 'dotenv';
import fs from 'fs';

dotenv.config();

// MonadCardGame合约字节码
const CONTRACT_BYTECODE = "";

// MonadCardGame合约ABI
const CONTRACT_ABI = [
  {
    "inputs": [
      {
        "internalType": "string[]",
        "name": "cardSymbols",
        "type": "string[]"
      }
    ],
    "name": "submitHand",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "player",
        "type": "address"
      }
    ],
    "name": "getPlayerHand",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "ENTRY_FEE",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
];

async function deployContract() {
  console.log('🚀 准备部署MonadCardGame合约到Monad测试网...\n');
  
  if (!process.env.PRIVATE_KEY) {
    console.error('❌ 错误: 请在.env文件中设置PRIVATE_KEY');
    console.log('   示例: PRIVATE_KEY=your_private_key_here');
    return;
  }
  
  try {
    // 1. 连接到Monad测试网
    const provider = new ethers.JsonRpcProvider('https://testnet-rpc.monad.xyz');
    console.log('✅ 已连接到Monad测试网');
    
    // 2. 创建钱包
    const wallet = new ethers.Wallet(process.env.PRIVATE_KEY, provider);
    console.log('👛 部署钱包地址:', wallet.address);
    
    // 3. 检查余额
    const balance = await provider.getBalance(wallet.address);
    console.log('💰 钱包余额:', ethers.formatEther(balance), 'MONAD');
    
    if (balance < ethers.parseEther('0.1')) {
      console.error('❌ 余额不足！需要至少0.1 MONAD来部署合约');
      console.log('   请访问 https://faucet.monad.xyz 获取测试币');
      return;
    }
    
    // 4. 部署合约
    console.log('\n📝 部署合约中...');
    const factory = new ethers.ContractFactory(CONTRACT_ABI, CONTRACT_BYTECODE, wallet);
    const contract = await factory.deploy();
    
    console.log('⏳ 等待交易确认...');
    console.log('📍 交易哈希:', contract.deploymentTransaction().hash);
    
    await contract.waitForDeployment();
    
    const contractAddress = await contract.getAddress();
    console.log('\n✅ 合约部署成功！');
    console.log('📍 合约地址:', contractAddress);
    
    // 5. 验证合约
    console.log('\n🔍 验证合约...');
    const deployedContract = new ethers.Contract(contractAddress, CONTRACT_ABI, wallet);
    
    const entryFee = await deployedContract.ENTRY_FEE();
    const owner = await deployedContract.owner();
    
    console.log('  - ENTRY_FEE:', ethers.formatEther(entryFee), 'ETH');
    console.log('  - Owner:', owner);
    
    // 6. 保存部署信息
    const deploymentInfo = {
      contractAddress: contractAddress,
      deployer: wallet.address,
      network: 'Monad Testnet',
      chainId: 10143,
      timestamp: new Date().toISOString(),
      transactionHash: contract.deploymentTransaction().hash,
      entryFee: ethers.formatEther(entryFee) + ' ETH'
    };
    
    fs.writeFileSync('deployment-info.json', JSON.stringify(deploymentInfo, null, 2));
    console.log('\n📄 部署信息已保存到 deployment-info.json');
    
    // 7. 更新前端配置
    console.log('\n📱 请更新前端代码中的合约地址:');
    console.log(`
// 在 src/UltimateMonadApp.jsx 中更新:
const MONAD_CARD_GAME_CONTRACT = {
  address: '${contractAddress}',
  abi: [...] // 保持现有ABI不变
};
`);
    
    // 8. 更新.env文件
    console.log('同时更新 .env 文件:');
    console.log(`VITE_CONTRACT_ADDRESS=${contractAddress}`);
    
    console.log('\n🎉 部署完成！');
    console.log('📝 下一步：');
    console.log('1. 更新前端代码中的合约地址');
    console.log('2. 更新.env文件中的VITE_CONTRACT_ADDRESS');
    console.log('3. 重新启动前端应用');
    
  } catch (error) {
    console.error('\n❌ 部署失败:', error.message);
    if (error.code === 'INSUFFICIENT_FUNDS') {
      console.log('💡 提示: 请确保钱包有足够的MONAD测试币');
      console.log('   访问 https://faucet.monad.xyz 获取测试币');
    }
  }
}

deployContract();