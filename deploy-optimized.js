const { ethers } = require('ethers');
const fs = require('fs');
const path = require('path');
require('dotenv').config();

// Monad 测试网配置
const MONAD_TESTNET_CONFIG = {
  name: 'Monad Testnet',
  chainId: 10143,
  rpcUrl: 'https://testnet.monad.network',
  explorer: 'https://testnet-explorer.monad.network'
};

// 优化的合约 ABI
const CONTRACT_ABI = [
  "constructor()",
  "function submitHand(string[] memory cardSymbols) external payable",
  "function getPlayerHand(address player) external view returns (string[] memory cardSymbols, uint256 submissionTime, bool isLocked)",
  "function canReselect(address player) public view returns (bool)",
  "function getUnlockTime(address player) external view returns (uint256)",
  "function getPlayerScore(address player) external view returns (uint256)",
  "function hasSubmittedHand(address player) external view returns (bool)",
  "function getContractBalance() external view returns (uint256)",
  "function getAllPlayers() external view returns (address[] memory)",
  "function getPlayerCount() external view returns (uint256)",
  "function updatePlayerScore(address player, uint256 newScore) external",
  "function batchUpdateScores(address[] memory playerList, uint256[] memory scores) external",
  "function distributePrizes(address[] memory winners, uint256[] memory amounts) external",
  "function emergencyWithdraw() external",
  "event HandSubmitted(address indexed player, string[] cardSymbols, uint256 timestamp)",
  "event ScoreUpdated(address indexed player, uint256 newScore)",
  "event PrizeDistributed(address indexed player, uint256 amount)"
];

// 优化的合约字节码（来自 MonadCardGameV2.sol）
const CONTRACT_BYTECODE = "";

async function deployContract() {
  console.log('🚀 开始部署 Monad 卡牌游戏合约...\n');
  
  try {
    // 检查环境变量
    if (!process.env.PRIVATE_KEY) {
      throw new Error('请在 .env 文件中设置 PRIVATE_KEY');
    }
    
    // 连接到 Monad 测试网
    console.log(`📡 连接到 ${MONAD_TESTNET_CONFIG.name}...`);
    const provider = new ethers.JsonRpcProvider(MONAD_TESTNET_CONFIG.rpcUrl);
    
    // 创建钱包
    const wallet = new ethers.Wallet(process.env.PRIVATE_KEY, provider);
    console.log(`💰 部署账户: ${wallet.address}`);
    
    // 检查余额
    const balance = await provider.getBalance(wallet.address);
    console.log(`💎 账户余额: ${ethers.formatEther(balance)} MONAD`);
    
    if (balance === 0n) {
      console.log('\n⚠️  警告: 账户余额为 0');
      console.log('请从 Monad 测试网水龙头获取测试币');
      console.log('水龙头地址: https://testnet-faucet.monad.network');
      return;
    }
    
    // 估算 Gas
    console.log('\n⛽ 估算 Gas 费用...');
    const gasPrice = await provider.getFeeData();
    console.log(`当前 Gas 价格: ${ethers.formatUnits(gasPrice.gasPrice, 'gwei')} gwei`);
    
    // 创建合约工厂
    const contractFactory = new ethers.ContractFactory(CONTRACT_ABI, CONTRACT_BYTECODE, wallet);
    
    // 估算部署 Gas
    const estimatedGas = await provider.estimateGas({
      data: CONTRACT_BYTECODE
    });
    const deploymentCost = estimatedGas * gasPrice.gasPrice;
    console.log(`预估部署成本: ${ethers.formatEther(deploymentCost)} MONAD`);
    
    // 部署合约
    console.log('\n📝 部署合约中...');
    const contract = await contractFactory.deploy({
      gasLimit: estimatedGas * 120n / 100n // 增加 20% 余量
    });
    
    console.log(`🔗 合约地址: ${contract.target}`);
    console.log(`📄 交易哈希: ${contract.deploymentTransaction().hash}`);
    console.log('\n⏳ 等待交易确认...');
    
    // 等待部署完成
    const receipt = await contract.deploymentTransaction().wait(2); // 等待 2 个区块确认
    console.log(`✅ 合约已成功部署！`);
    console.log(`🔍 区块高度: ${receipt.blockNumber}`);
    console.log(`⛽ 实际 Gas 使用: ${receipt.gasUsed.toString()}`);
    
    // 保存部署信息
    const deploymentInfo = {
      contractAddress: contract.target,
      deployer: wallet.address,
      network: MONAD_TESTNET_CONFIG.name,
      chainId: MONAD_TESTNET_CONFIG.chainId,
      timestamp: new Date().toISOString(),
      transactionHash: contract.deploymentTransaction().hash,
      blockNumber: receipt.blockNumber,
      gasUsed: receipt.gasUsed.toString(),
      deploymentCost: ethers.formatEther(receipt.gasUsed * gasPrice.gasPrice),
      explorer: `${MONAD_TESTNET_CONFIG.explorer}/address/${contract.target}`
    };
    
    // 写入文件
    fs.writeFileSync(
      path.join(__dirname, 'deployment-info-v2.json'),
      JSON.stringify(deploymentInfo, null, 2)
    );
    
    console.log('\n📊 部署信息已保存到 deployment-info-v2.json');
    console.log(`\n🌐 在浏览器中查看:`);
    console.log(`${deploymentInfo.explorer}`);
    
    // 验证合约
    console.log('\n🔍 验证合约功能...');
    
    // 测试基本功能
    const contractBalance = await contract.getContractBalance();
    console.log(`合约余额: ${ethers.formatEther(contractBalance)} MONAD`);
    
    const playerCount = await contract.getPlayerCount();
    console.log(`玩家数量: ${playerCount}`);
    
    const owner = await contract.owner();
    console.log(`合约所有者: ${owner}`);
    
    console.log('\n🎉 部署完成！合约已准备就绪。');
    
    // 生成前端配置
    const frontendConfig = `
// 自动生成的配置文件
export const CONTRACT_ADDRESS = '${contract.target}';
export const CHAIN_ID = ${MONAD_TESTNET_CONFIG.chainId};
export const NETWORK_NAME = '${MONAD_TESTNET_CONFIG.name}';
export const RPC_URL = '${MONAD_TESTNET_CONFIG.rpcUrl}';
export const EXPLORER_URL = '${MONAD_TESTNET_CONFIG.explorer}';
export const DEPLOYMENT_BLOCK = ${receipt.blockNumber};
`;
    
    fs.writeFileSync(
      path.join(__dirname, 'src/config/contractConfig.js'),
      frontendConfig
    );
    
    console.log('\n📄 前端配置文件已更新');
    
  } catch (error) {
    console.error('\n❌ 部署失败:', error.message);
    
    if (error.code === 'INSUFFICIENT_FUNDS') {
      console.log('\n💡 提示: 账户余额不足，请获取测试币');
    } else if (error.code === 'NETWORK_ERROR') {
      console.log('\n💡 提示: 网络连接失败，请检查 RPC URL');
    } else if (error.code === 'INVALID_ARGUMENT') {
      console.log('\n💡 提示: 参数无效，请检查私钥格式');
    }
    
    process.exit(1);
  }
}

// 运行部署
if (require.main === module) {
  deployContract();
}

module.exports = { deployContract };